imports:
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    #translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    templating:
        engines: ['twig']
    form: ~
    csrf_protection: { enabled: true }
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

framework:
    translator: ~

fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: abs\userBundle\Entity\User
    from_email:
        address: admin@mail.com
        sender_name: adminMyBook
    registration:
        form:
            type: abs\userBundle\Form\RegistrationType

fos_js_routing:
    cache_control:
        # All are optional, defaults shown
        public: true   # can be true (public) or false (private)
        maxage: null    # integer value, e.g. 300
        smaxage: null   # integer value, e.g. 300
        expires: null   # anything that can be fed to "new \DateTime($expires)", e.g. "5 minutes"
        vary: []

#vich_Uploader
vich_uploader:
    db_driver: orm # or mongodb or propel or phpcr

services:
    #registration form overiding
    app.form.registration:
        class: abs\userBundle\Form\RegistrationType
        tags:
            - { name: form.type, alias: app_user_registration }

    #change security controller file
    fos_user.security.controller:
        class: abs\userBundle\Controller\SecurityController

    #change profile controller file
#    fos_user.profile.controller:
#        class: abs\userBundle\Controller\ProfileController

    #change resetting controller file
    fos_user.resetting.controller:
        class: abs\userBundle\Controller\ResettingController

    #change change_password controller file
    fos_user.change_password.controller:
        class: abs\userBundle\Controller\ChangePasswordController

    #change registration controller file
#    fos_user.registration.controller:
#        class: abs\userBundle\Controller\RegistrationController
